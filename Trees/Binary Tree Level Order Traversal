def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if not root:
            return []

        queue = deque([root])
        result = []

        while queue:
            level = len(queue)
            level_node = []

            for _ in range(level):
                node = queue.popleft()
                level_node.append(node.val)

                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)

            result.append(level_node)

        return result

    # Time Complexity is O(n)
    # Space Complexity is O(n)
