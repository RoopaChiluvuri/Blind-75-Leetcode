def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:
        count = 0
        current = root
        stack = []

        while stack or current:
            while current:
                stack.append(current)
                current = current.left

            current = stack.pop()
            count += 1

            if count == k:
                return current.val

            current = current.right
        return -1

# For Average  Case

# Time Complexity is O(k)
# Space Complexity is O(log N)
